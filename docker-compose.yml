services:
  flask:
    build: .
    container_name: flask_app
    ports:
      - "5000:5000"
    depends_on:
      - mysql
      - rabbitmq
      - redis
    environment:
      - MYSQL_HOST=mysql
      - MYSQL_USER=root
      - MYSQL_PASSWORD=rootpass
      - MYSQL_DB=s4edb
      - CELERY_BROKER_URL=amqp://guest:guest@rabbitmq//
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    volumes:
      - ./app:/app
    command: ["./wait-for-it.sh", "mysql:3306", "--timeout=30", "--strict", "--", "python", "main.py"]

  worker:
    build: .
    container_name: celery_worker
    command: celery -A worker.celery_app worker --loglevel=info
    depends_on:
      - mysql
      - rabbitmq
      - redis
    environment:
      - MYSQL_HOST=mysql
      - MYSQL_USER=root
      - MYSQL_PASSWORD=rootpass
      - MYSQL_DB=s4edb
      - CELERY_BROKER_URL=amqp://guest:guest@rabbitmq//
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - PYTHONPATH=/app
    volumes:
      - ./app:/app
      - /var/run/docker.sock:/var/run/docker.sock

  mysql:
    image: mysql:8.0
    container_name: mysql_db
    environment:
      - MYSQL_ROOT_PASSWORD=rootpass
      - MYSQL_DATABASE=s4edb
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"

  redis:
    image: redis:7
    container_name: redis
    ports:
      - "6379:6379"

  katana:
    image: projectdiscovery/katana:latest
    container_name: katana_crawler
    entrypoint: ["sleep", "infinity"]
    volumes:
      - ./katana:/data

volumes:
  mysql_data: